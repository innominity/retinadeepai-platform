# Generated by Django 5.1.6 on 2025-04-02 08:48

import django.db.models.deletion
import retina_analysis.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('retina_analysis', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RetinaImageCropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('label', models.CharField(max_length=256, unique=True)),
                ('description', models.CharField(blank=True, max_length=512)),
            ],
            options={
                'verbose_name': 'Тип среза DICOM изображения сетчатки',
                'verbose_name_plural': 'Типы срезов DICOM изображений сетчатки',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='RetinaFileUpload',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_orig', models.FileField(blank=True, null=True, upload_to=retina_analysis.models.retina_file_upload)),
                ('image', models.ImageField(blank=True, null=True, upload_to=retina_analysis.models.retina_image_upload)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=retina_analysis.models.retina_thumbnail_upload)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('ext', models.CharField(blank=True, max_length=16, null=True)),
                ('is_example', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retina_upload_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Загруженный файл сетчатки для распознавания',
                'verbose_name_plural': 'Загруженные файлы сетчатки для распознавания',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='RetinaDetectionTask',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('detection_cover', models.ImageField(blank=True, null=True, upload_to=retina_analysis.models.retina_detection_cover_upload)),
                ('status', models.IntegerField(choices=[(1, 'Not Started'), (2, 'Processed'), (3, 'Success'), (4, 'Error')], default=1)),
                ('status_update', models.DateTimeField(auto_now=True)),
                ('is_obb', models.BooleanField(default=False, verbose_name='флаг учитывать поворот рамки или нет')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retina_analysis.retinafileupload')),
            ],
            options={
                'verbose_name': 'Задача детекции фрагментов сетчатки на изображении',
                'verbose_name_plural': 'Задачи детекции фрагментов сетчатки на изображении',
            },
        ),
        migrations.CreateModel(
            name='RetinaImageCropOCT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=retina_analysis.models.retina_crop_oct_upload)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=retina_analysis.models.retina_crop_oct_thumbnail_upload)),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('task_detection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='retina_analysis.retinadetectiontask')),
                ('type_oct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='retina_analysis.retinaimagecroptype')),
            ],
            options={
                'verbose_name': 'Срез DICOM изображения',
                'verbose_name_plural': 'Срезы DICOM изображения',
            },
        ),
    ]
